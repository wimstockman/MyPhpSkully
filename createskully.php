<?php
//PLEASE FILL IN YOUR DATABASE WHERE YOUR WANT TO MAKE A SKELET OF
define ("dbname","");
define ("dbcharset","latin1");
define("dbuser","");
define("dbpass","");
define("dbhost","localhost");

//PLEASE choose directory to create file in 
//define ("dir","//");


class mysqlskelet
{
	
	public $fields;
	public $tabels;
	public $handle;
	public $dbconnection;
	
	public function connect_db()
	{
		try {
		$this->dbconnection = new PDO("mysql:host=".dbhost.";dbname=".dbname.";charset=".dbcharset,dbuser,dbpass,array(PDO::ATTR_EMULATE_PREPARES => false,PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION));	
		}
		 catch (PDOException $e) 
		{
			echo 'Connection Failed: ' .$e->getMessage();
		}
		
	}

	public function create_skelet()
	{
	$this->connect_db();
	$k = 0;
	foreach ($this->dbconnection->query('SHOW TABLES') as $row) //get the different tables in the database
	{
	 $this->tabels[$k] = $row[0];
	 $k++; 
	}//end of fetching tables

	//For each table in the db create the skelet and retriev the fields
	 for ($t=0;$t<(count($this->tabels));$t++)
	 {

	 //create the first-line of our skelet
	 $k = 0;
	 $i = 0;
	 $file = $this->tabels[$t]."-skelet.php";
	 $this->handle = fopen($file, "w");
	 $line1 = "<?php\n//Generated by MysqlSkelet on ".date('Y-m-d h:i:s ',time())." \n//StartMysqlSkelet
 	 \nclass ".$this->tabels[$t]."Skelet {\n";
	 fwrite($this->handle,$line1);
	 
	//place the fields in our class as members of the class
		$sql = "SHOW FIELDS FROM ".$this->tabels[$t].";";
	foreach($this->dbconnection->query($sql) as $row)
	 {
	 			
	 		$this->fields[$t][$k] = $row[0];
	 		$line = "\tpublic $".$row[0].";\t//".$row[1]."\n";
	 		
	 		fwrite($this->handle,$line); 
  			$k++;
	
	 }
	  //write connect_db function
	 fwrite ($this->handle,"\npublic function connect_db()\n{\n");
	 
	 $LIJN = 'try {
		$this->dbconnection = new PDO("mysql:host=".dbhost.";dbname=".dbname.";charset=".dbcharset,dbuser,dbpass,array(PDO::ATTR_EMULATE_PREPARES => false,PDO::ATTR_ERRMODE => PDO::ERRMODE_EXCEPTION));	
		}
		 catch (PDOException $e) 
		{
			echo "Connection Failed: " .$e->getMessage();
		}
		';
	 
	fwrite($this->handle,$LIJN);
	
	 
	 //place the delete function
	 
	 $this->create_remove_function($t);
	 }
	}



public function end_of_file()
{
	fwrite($this->handle,"}");
	 $endingline = "\n//StopMysqlSkelet\n?>";
	 fwrite($this->handle,$endingline);
	 fclose($this->handle);

	

}//end of file
public function create_insert_function($tablenumber) 
{
	fwrite ($this->handle,"\npublic function insert_new_record()\n{\n");
	fwrite($this->handle,'$this->mysqli = new mysqli(dbhost, dbuser, dbpass, dbname);');
	$insertstatement = "\n".'$sql = " INSERT INTO `';
	$insertstatement .= $this->tabels[$tablenumber];
	$insertstatement .= '` SET ';
	
for ($i=0;$i<(count($this->fields[$tablenumber]));$i++)
{
	$insertstatement .= "\n".$this->fields[$tablenumber][$i].'=\'$this->'.$this->fields[$tablenumber][$i].'\', ';
	
		 	
	

}
	$insertstatement = substr($insertstatement,0,-2);
	$insertstatement .= ";\";\n";
	$insertstatement .='if (!$result = $this->mysqli->query($sql)) {'."\n";
    $insertstatement .='printf("Insert halted Errormessage2: %s\n", $this->mysqli->error);}}';
       
	
	fwrite($this->handle,$insertstatement);	
}
public function create_update_function($tablenumber)
{
fwrite ($this->handle,"\npublic function update_record(\$recordid)\n{\n");
	fwrite($this->handle,'$this->mysqli = new mysqli(dbhost, dbuser, dbpass, dbname);');
	$insertstatement = "\n".'$sql = " UPDATE `';
	$insertstatement .= $this->tabels[$tablenumber];
	$insertstatement .= '` SET ';
	
for ($i=0;$i<(count($this->fields[$tablenumber]));$i++)
{
	$insertstatement .= "\n".$this->fields[$tablenumber][$i].'=\'$this->'.$this->fields[$tablenumber][$i].'\',';
	
}
	$insertstatement = substr($insertstatement,0,-1);
	$insertstatement .= "\n WHERE ID='\$recordid';\";\n";
	$insertstatement .='if (!$result = $this->mysqli->query($sql)) {'."\n";
    $insertstatement .='printf("Update halted Errormessage2: %s\n", $this->mysqli->error);}}';
       
	
	fwrite($this->handle,$insertstatement);	
	
}
public function create_remove_function($tablenumber)
{
	
	fwrite ($this->handle,"\npublic function remove_record(\$recordid)\n{\n");
	fwrite($this->handle,'$this->dbconnection = connect_db();');
	$insertstatement = "\n".'$pdoprep = $this->dbconnection->prepare("DELETE FROM `';
	$insertstatement .= $this->tabels[$tablenumber];
	$insertstatement .= '` WHERE ID=?" );';
	$insertstatement .= '$pdoprep->bindValue(1,$recordid, PDO::PARAM_INT);'."\n";
	$insertstatement .='$pdoprep->execute();'."\n}\n";    
	fwrite($this->handle,$insertstatement);
	
}




}//end of class


$test = new mysqlskelet();
$test->create_skelet();

$test->end_of_file();
?>


